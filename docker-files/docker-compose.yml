version: "3.7"

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mysql:
    driver: local

services:
  npm:
    build:
      context: ./npm
    command: sh -c "npm i && npm run prod"
    volumes:
      - ${APP_CODE_PATH_HOST}:/src
      - ${NPM_HOST_LOG_PATH}:/home/dev/.npm/_logs

  php-cli:
    build:
      context: ./php-fpm
    command: sh -c "composer install --optimize-autoloader --no-dev --no-interaction && php artisan migrate --force && php artisan db:seed --force && php artisan config:cache && php artisan route:cache"
    volumes:
      - ./php-fpm/php7.3.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:/var/www
    depends_on:
      - mysql
    networks:
      - backend

  php-fpm:
    build:
      context: ./php-fpm
    volumes:
      - ./php-fpm/php7.3.ini:/usr/local/etc/php/php.ini
      - ${APP_CODE_PATH_HOST}:/var/www
    expose:
      - "9000"
    networks:
      - backend
    depends_on:
      - mysql

  nginx:
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM_CONTAINER=php-fpm
        - PHP_UPSTREAM_PORT=9000
        - http_proxy
        - https_proxy
        - no_proxy
    volumes:
      - ${APP_CODE_PATH_HOST}:/var/www:cached
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

  mysql:
    build:
      context: ./mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION}
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend